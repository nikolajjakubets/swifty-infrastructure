---
 - name: Install the boto module
   pip:
     name: boto
     executable: pip3

 - name: Provision core instances
   local_action:
     module: ec2
     aws_access_key: "{{ aws_access_key }}"
     aws_secret_key: "{{ aws_secret_key }}"
     key_name: "{{ ec2_keypair }}"
     group_id: "{{ ec2_security_group }}"
     instance_type: "{{ ec2_instance_type }}"
     vpc_subnet_id: "{{ ec2_subnet_id }}"
     image: "{{ ec2_image }}"
     region: "{{ ec2_region }}"
     assign_public_ip: yes
     wait: true
     count: 1
   register: ec2_core

 - name: add host to inventory
   add_host:
     hostname: "{{ item.public_ip }}"
     core_public_ip: "{{ item.public_ip }}"
     core_private_ip: "{{ item.private_ip }}"
     groups:
       - swy-core
       - dep-core
   with_items: '{{ ec2_core.instances }}'

 - name: Wait for the instances to boot by checking the ssh port
   wait_for: host="{{item.public_ip}}" port=22 delay=20 timeout=320 state=started
   with_items: '{{ ec2_core.instances }}'

 - name: Provision worker instances
   local_action:
     module: ec2
     aws_access_key: "{{ aws_access_key }}"
     aws_secret_key: "{{ aws_secret_key }}"
     key_name: "{{ ec2_keypair }}"
     group_id: "{{ ec2_security_group }}"
     instance_type: "{{ ec2_instance_type }}"
     vpc_subnet_id: "{{ ec2_subnet_id }}"
     image: "{{ ec2_image }}"
     region: "{{ ec2_region }}"
     assign_public_ip: yes
     wait: true
     count: 1
   register: ec2_worker

 - name: add host to inventory
   add_host:
     hostname: "{{ item.public_ip }}"
     worker_public_ip: "{{ item.public_ip }}"
     worker_private_ip: "{{ item.private_ip }}"
     groups:
       - swy-worker
       - dep-worker
   with_items: '{{ ec2_worker.instances }}'

 - name: Wait for the instances to boot by checking the ssh port
   wait_for: host="{{item.public_ip}}" port=22 delay=20 timeout=320 state=started
   with_items: '{{ ec2_worker.instances }}'
