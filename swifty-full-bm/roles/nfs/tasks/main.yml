- name: install nfs packages
  dnf:
    name:
      - nfs-utils
    state: latest

- name: enable  nfs service
  systemd:
    name: nfs
    enabled: yes
    masked: no

- name: start nfs service
  systemd: state=started name=nfs

- name: Configure allow master tcp wrapper
  lineinfile:
    path: /etc/hosts.allow
    line: 'rpcbind mountd nfsd statd lockd rquotad : 192.0.0.0/24'

- name: Configure deny master tcp wrapper
  lineinfile:
    path: /etc/hosts.deny
    line: 'rpcbind mountd nfsd statd lockd rquotad : ALL'

- name: Creates swifty-volume dir
  file:
    path: /home/swifty-volume
    state: directory

- name: Configure export dir
  shell: echo "/home/swifty-volume {{ hostvars[groups['worker'][0]]['vpn_ip'] }}(rw,sync,no_root_squash)" >> /etc/exports

- name: Configure export dir
  shell: echo "/home/swifty-volume {{ hostvars[groups['worker'][1]]['vpn_ip'] }}(rw,sync,no_root_squash)" >> /etc/exports

- name: Export dir
  shell: exportfs -a

- name: Wait for the instances to boot by checking the ssh port
  wait_for: host="{{item}}" port=22 delay=20 timeout=320 state=started
  with_items:
    - "{{ hostvars[groups['worker'][0]]['vpn_ip'] }}"
    - "{{ hostvars[groups['worker'][1]]['vpn_ip'] }}"

# This is part for workers

- name: install nfs packages
  dnf:
    name:
      - nfs-utils
    state: latest
  delegate_to: "{{item}}"
  with_items:
    - "{{ hostvars[groups['worker'][0]]['physical_ip'] }}"
    - "{{ hostvars[groups['worker'][1]]['physical_ip'] }}"

- name: enable  nfs service
  systemd:
    name: nfs
    enabled: yes
    masked: no
  delegate_to: "{{item}}"
  with_items:
    - "{{ hostvars[groups['worker'][0]]['physical_ip'] }}"
    - "{{ hostvars[groups['worker'][1]]['physical_ip'] }}"

- name: start nfs service
  systemd: state=started name=nfs
  delegate_to: "{{item}}"
  with_items:
    - "{{ hostvars[groups['worker'][0]]['physical_ip'] }}"
    - "{{ hostvars[groups['worker'][1]]['physical_ip'] }}"


- name: Configure allow workers tcp wrapper
  lineinfile:
    path: /etc/hosts.allow
    line: 'rpcbind mountd nfsd statd lockd rquotad : 192.0.0.0/24'
  delegate_to: "{{item}}"
  with_items:
    - "{{ hostvars[groups['worker'][0]]['physical_ip'] }}"
    - "{{ hostvars[groups['worker'][1]]['physical_ip'] }}"

- name: Configure deny workers tcp wrapper
  lineinfile:
    path: /etc/hosts.deny
    line: 'rpcbind mountd nfsd statd lockd rquotad : ALL'
  delegate_to: "{{item}}"
  with_items:
    - "{{ hostvars[groups['worker'][0]]['physical_ip'] }}"
    - "{{ hostvars[groups['worker'][1]]['physical_ip'] }}"

- name: Creates swifty-volume dir
  file:
    path: /home/swifty-volume
    state: directory
  delegate_to: "{{item}}"
  with_items:
    - "{{ hostvars[groups['worker'][0]]['physical_ip'] }}"
    - "{{ hostvars[groups['worker'][1]]['physical_ip'] }}"

- name: Configure mount point
  shell: echo "{{ hostvars[groups['gw'][0]]['vpn_ip'] }}:/home/swifty-volume /home/swifty-volume nfs rw,sync,hard,intr,addr={{ tinc_vpn_ip }} 0 0" >>  /etc/fstab
  delegate_to: "{{item}}"
  with_items:
    - "{{ hostvars[groups['worker'][0]]['physical_ip'] }}"
    - "{{ hostvars[groups['worker'][1]]['physical_ip'] }}"

- name: Mount swifty-volume
  shell: mount /home/swifty-volume
  delegate_to: "{{item}}"
  with_items:
    - "{{ hostvars[groups['worker'][0]]['physical_ip'] }}"
    - "{{ hostvars[groups['worker'][1]]['physical_ip'] }}"
